{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["data","labels","datasets","type","label","borderColor","borderWidth","pointBackgroundColor","borderJoinStyle","lineTension","radius","pointStyle","fill","backgroundColor","options","responsive","title","display","text","fontSize","fontStyle","legend","position","scales","pointLabels","xAxes","ticks","padding","stepSize","max","gridLines","barPercentage","yAxes","beginAtZero","layout","left","right","top","bottom","plugins","datalabels","color","align","formatter","value","context","dataset","anchor","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","style","width","height","document","getElementById"],"mappings":"kLAKMA,EAAO,CACXC,OAAQ,CAAC,SAAU,SAAU,SAAU,UACvCC,SAAU,CACR,CACEC,KAAM,OACNC,MAAO,uBACPC,YAAa,oBACbC,YAAa,EACbC,qBAAsB,oBACtBC,gBAAiB,QACjBC,YAAa,GACbC,OAAQ,EACRC,WAAY,SACZC,MAAM,EACNZ,KAAM,CAAC,EAAG,EAAG,GAAI,KAEnB,CACEG,KAAM,MACNC,MAAO,sCACPS,gBAAiB,UACjBb,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GACzBK,YAAa,QACbC,YAAa,GAEf,CACEH,KAAM,MACNC,MAAO,uBACPS,gBAAiB,UACjBb,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,IAE3B,CACEG,KAAM,MACNC,MAAO,gCACPS,gBAAiB,UACjBb,KAAM,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,MAKzBc,EAAU,CAEdC,YAAY,EAEZC,MAAO,CACLC,SAAS,EACTC,KAAM,qBACNC,SAAU,GACVC,UAAW,QAEbC,OAAQ,CAENC,SAAU,SACVrB,OAAQ,IAKVsB,OAAQ,CACNC,YAAa,CACXJ,UAAW,QAEbK,MAAO,CAAC,CAENC,MAAO,CACLP,SAAU,GACVQ,QAAS,EACTC,SAAU,EACVC,IAAK,IAIPC,UAAW,CACTb,SAAS,GAEXc,cAAe,KAEjBC,MAAO,CACL,CAGEN,MAAO,CACLO,aAAa,MASrBC,OAAQ,CACNP,QAAS,CACPQ,KAAM,GACNC,MAAO,EACPC,IAAK,EACLC,OAAQ,IAGZC,QAAS,CACPC,WAAY,CACVvB,SAAS,EACTwB,MAAO,QACPC,MAAO,MACPC,UAAW,SAAUC,EAAOC,GAC1B,MAA+B,OAAxBA,EAAQC,QAAQ3C,KAAgByC,EAAQ,IAAMA,GAEvDG,OAAQ,SAaCC,EARH,kBAEV,sBAAKC,UAAU,SAAf,UACE,oBAAIA,UAAU,UACd,cAAC,MAAD,CAAKjD,KAAMA,EAAMc,QAASA,QC5GfoC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,qBAAKC,MAAO,CAAEC,MAAO,MAAOC,OAAQ,OAApC,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BhB,M","file":"static/js/main.2eefbd5c.chunk.js","sourcesContent":["import React from 'react'\nimport { Bar } from 'react-chartjs-2'\nimport datalabels from 'chartjs-plugin-datalabels';\n//const rand = () => Math.round(Math.random() * 20 - 10)\n\nconst data = {\n  labels: ['Week 3', 'Week 4', 'Week 5', 'Week 6'],\n  datasets: [\n    {\n      type: 'line',\n      label: '# of Tickets created',\n      borderColor: 'rgb(54, 162, 235)',\n      borderWidth: 3,\n      pointBackgroundColor: \"rgb(54, 162, 235)\",\n      borderJoinStyle: \"round\",\n      lineTension: 0.3,\n      radius: 4,\n      pointStyle: \"circle\",\n      fill: false,\n      data: [6, 9, 12, 16],\n    },\n    {\n      type: 'bar',\n      label: '# of tickets with Excellent content',\n      backgroundColor: '#ff531a',\n      data: [1, 1, 2, 3, 2, 3, 5],\n      borderColor: 'white',\n      borderWidth: 1,\n    },\n    {\n      type: 'bar',\n      label: 'Refile Wrong product',\n      backgroundColor: '#adad85',\n      data: [0, 3, 1, 2, 0, 1, 4],\n    },\n    {\n      type: 'bar',\n      label: '# of ticket with missing info',\n      backgroundColor: '#ffcc00',\n      data: [1, 3, 5, 2, 3, 4, 8],\n    },\n  ],\n}\n\nconst options = {\n  //maintainAspectRatio: false,\n  responsive: true,\n  //aspectRatio: 1,\n  title: {\n    display: true,\n    text: \"Escalation Quality\",\n    fontSize: 24,\n    fontStyle: 'bold',\n  },\n  legend: {\n    //display:false,\n    position: 'bottom',\n    labels: {\n      //usePointStyle: true,\n      //fontColor: \"white\"\n    }\n  },\n  scales: {\n    pointLabels: {\n      fontStyle: \"bold\",\n    },\n    xAxes: [{\n      // stacked: true,\n      ticks: {\n        fontSize: 24,\n        padding: 0,\n        stepSize: 1,\n        max: 90,\n        // fontStyle: 'bold',\n        // fontColor: 'black',\n      },\n      gridLines: {\n        display: false\n      },\n      barPercentage: 0.8\n    }],\n    yAxes: [\n      {//stacked: true,\n        //categoryPercentage: 1.0,\n        //barPercentage: 0.85,\n        ticks: {\n          beginAtZero: true,\n        },\n        // gridLines: {\n        //   lineWidth: 15,\n        //   color: \"rgba(255,255,255,0)\"\n        // },\n      },\n    ],\n  },\n  layout: {\n    padding: {\n      left: 30,\n      right: 0,\n      top: 0,\n      bottom: 0\n    }\n  },\n  plugins: {\n    datalabels: {\n      display: true,\n      color: 'black',\n      align: 'end',\n      formatter: function (value, context) {\n        return context.dataset.type == \"bar\" ? value + '%' : value;\n      },\n      anchor: 'end'\n    }\n  }\n}\n\nconst App = () => (\n\n  <div className='header'>\n    <h1 className='title'></h1>\n    <Bar data={data} options={options} />\n  </div>\n)\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <div style={{ width: '60%', height: '60%' }}>\n      <App />\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}